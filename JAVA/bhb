// public void addLast(E data) {
//     Node<E> newNode = new Node<>(data);
//     if (head == null) {
//         head = newNode;
//         return;
//     }
//     Node<E> current = head;
//     while (current.next != null) {
//         current = current.next;
//     }
//     current.next = newNode;
// }

// public E removeFirst() {
//     if (head == null) {
//         return null;
//     }
//     E data = head.data;
//     head = head.next;
//     return data;
// }

// public E removeLast() {
//     if (head == null) {
//         return null;
//     }
//     if (head.next == null) {
//         E data = head.data;
//         head = null;
//         return data;
//     }
//     Node<E> current = head;
//     while (current.next.next != null) {
//         current = current.next;
//     }
//     E data = current.next.data;
//     current.next = null;
//     return data;
// }

// public E getFirst() {
//     if (head == null) {
//         return null;
//     }
//     return head.data;
// }

// public E getLast() {
//     if (head == null) {
//         return null;
//     }
//     Node<E> current = head;
//     while (current.next != null) {
//         current = current.next;
//     }
//     return current.data;
// }


public class LinkedList<E> {
    private Node<E> head;
    private Node<E> tail;
    private int size;

    public LinkedList() {
        head = null;
        tail = null;
        size = 0;
    }

    public void addFirst(E element) {
        Node<E> newNode = new Node<>(element);
        if (head == null) {
            head = newNode;
            tail = newNode;
        } else {
            newNode.next = head;
            head = newNode;
        }
        size++;
    }

    public void addLast(E element) {
        Node<E> newNode = new Node<>(element);
        if (tail == null) {
            head = newNode;
            tail = newNode;
        } else {
            tail.next = newNode;
            tail = newNode;
        }
        size++;
    }

    public E removeFirst() {
        if (head == null) {
            return null;
        }
        E element = head.element;
        head = head.next;
        size--;
        if (head == null) {
            tail = null;
        }
        return element;
    }

    public E removeLast() {
        if (tail == null) {
            return null;
        }
        E element = tail.element;
        if (head == tail) {
            head = null;
            tail = null;
        } else {
            Node<E> current = head;
            while (current.next != tail) {
                current = current.next;
            }
            current.next = null;
            tail = current;
        }
        size--;
        return element;
    }

    public E getFirst() {
        if (head == null) {
            return null;
        }
        return head.element;
    }

    public E getLast() {
        if (tail == null) {
            return null;
        }
        return tail.element;
    }

    public void add(E element) {
        addLast(element);
    }

    public static void main(String[] args) {
        LinkedList<String> list = new LinkedList<>();
        
        list.addFirst("first");
        
        list.addLast("second");
        
        System.out.println(list.getFirst());
        
        System.out.println(list.getLast());
        
        System.out.println(list.removeFirst());
        
        System.out.println(list.removeLast());
        
    }
}

class Node<E> {
    E element;
    Node<E> next;

    public Node(E element) {
      this.element = element; 
      next = null; 
   }
}
